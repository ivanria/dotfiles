##### change virtual terminal
chvt 1 or 7

strace ls 2>&1 | tee log ##### redirect stderr and stdout to pipe tee write stdin on console and to the file


wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=unix,ascii --domains opennet.ru --no-parent http://site.com/doc/ ############ download website

cpio -idmv < initrd-file
find ./ | cpio -H newc -o > /boot/new-initrd.cpio ###### create cpio archive

#reqursive substitude
find -type f -name \*.h  -exec sed -i -r 's/server\.h"/net\.h"/g' {} \;

####memory
cat /proc/meminfo
cat /proc/sys/vm/swappiness

echo 1 > /proc/sys/vm/drop_caches && sync && echo 2 > /proc/sys/vm/drop_caches && sync && echo 3 > /proc/sys/vm/drop_caches && sync && free -h


iostat slabtop 

# ifconfig eth0 ${IP_ADDR} broadcast ${BROADCAST} netmask ${NETMASK} up
route add default gw ${GATEWAY}

#find . -name \*.c | xargs grep '^function'
find . -type f -exec sh -c 'f={}; #created variables with finded filename
find . -exec grep -H -n 'hello' {} \;  #Hn it is filename and number of string
grep -nHe ^xalloc_die -r .

#awk
echo "username=DefUser2; PRNT=HP:0111020202=yes; HP:0s0dw33333=no; SCAN=HP:0999695444; FLASH=Kingston:5B651F00047B=rw;JetFlash:26HJQV7I57QG86CB=ro;" |  awk -F";"                          '{ for (i=1; i<=NF; i++) { if ($i ~ "username=.*") { print $i } } }' | sed 's/username=//'

#unarchive
bzip2 -cd filename.tar.bz2 | tar -xvf -


#print used space on mounted volume
df


#get or set hard disks parameters
hdparm


#what file is opened on filesystem
fuser -mv /mount_point


#concatenate and compress files
tar -c * > archeve.tar
bzip2 -z archeve.tar  #result file is archeve.tar.bz2

#search files which was later date of change than %filename1,
#and files which was earlier date of change than %filename2
find . \( -newer %filename1 \) -and \( ! -newer %filename2 \)


#redirect and merge stderr into stdout
date > file 2>$1
exec >filename #redirect stdout from all command of the script to "filename"

n<&- #close input file descriptor n
0<&-, <&- #close stdin
n>&- #close output file descriptor n
1>&-, >&- #close stdout

#############################################
exec 6<&0 #lonk file descriptor #6 with stdin
exec < data-file

read s1 #read first line from data-file
read s2 #read second line from data-file

exec 0<&6 6<&- #restore stdin from fd 6 and close fd 6 to free it for system
#############################################

#Search  the  short  descriptions  and  manual  page names for the keyword printf as regular #expression.
man -k keyword
man -a intro #show all section where the "intro" is exest


#output the first part of file
head


# cut - remove sections from each line of files
cut


# tr - translate or delete characters
tr

# whatis whereis which
whatis    whereis   which


#nmap - Network exploration tool and security / port scanner
nmap -sT server.example.com    # will be scanning port from 0 to 1024
nmap -O -sV server.example.com    # will be scanning ports and detect operation sistem


objdump
xargs

lsof -p

bg - run jobs in the background

help bg
help fg
help jobs
help disown #detach process from terminal
man bash
info bash

dtach

nohup - run a command immune to hangups, with output to a non-tty

du - disk usage

tee # read from standard input and write to standard output and files

aptitude search package_name|sed -n '/^i *./p'|sed 's/^i   //'|sed 's/^i A //'|sed 's/ *- .*//' #cut all from aptitude output without package names

./checkpatch.pl --no-tree -f sourcefile.c #check file for kernel style

(printf "PERMISSIONS LINKS OWNER GROUP SIZE MONTH DAY HH:MM PROG-NAME\n" ; ls -l | sed 1d) | column -t #print by columns

colrm 2 4 <filename #remove the second through fourth character from each line of text file "filename"

nl < .vimrc #inserts numbers of non blanc line

pr filename #prepare for printing file "filename" and put it to stdout

read -a list < <( od -Ad -w24 -t u2 /dev/urandom ) # list is array of random numbers

head -c1 /dev/urandom | od -N 1 -i | awk '{ print $2 }' #generate 1 random number


for i in $(seq 0 $(( "${#GROUPS[@]}" - 1 )) ); do echo ${GROUPS[$i]} ; done #prints numbers of groups in which the user is included

for pic in *"$infmt"; do echo "$pic"; ls "${pic}" | sed -e s/\.$infmt// ; p2=$(ls "$pic" | sed -e s/\.$infmt//); echo "${pic} ${p2}.${outfmt}"; done #change file extension from $infmt to $outfmt

diff -Naur standard_moodle my_moodle > difference.patch 
patch -p1 < new_version.patch


NOTES
       This program is mostly obsolete.  Replacement for netstat is  ss.   Re‐
       placement for netstat -r is ip route.  Replacement for netstat -i is ip
       -s link.  Replacement for netstat -g is ip maddr.

netstat -putna #all tcp connections

ss -l -p -n | egrep 'tcp|udp' #show opened ports


sed -n '/#START#/,/#END#/p' #print all lines between #START# and #END#
